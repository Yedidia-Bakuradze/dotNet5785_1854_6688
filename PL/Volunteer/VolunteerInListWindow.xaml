<Window x:Class="PL.Volunteer.VolunteerListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Volunteer"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Title="VolunteerInList"
        Height="450"
        Width="800"
        Closed="OnWindowClosed"
        Loaded="OnWindowLoaded"
        >
    <Window.Resources>
        <!-- Add btn's style-->
        <Style x:Key="RoundedAddButton" TargetType="Border">
            <Setter Property="CornerRadius" Value="100"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Background" Value="White"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                <GradientStop Color="#2798D5" Offset="0"/>
                <GradientStop Color="#C25C9E" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>
        
        
        <!-- The upper part-->
        <DataGrid Grid.Row="0"
       	          EnableRowVirtualization="True"
                  SelectedItem="{Binding SelectedVolunteer}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  RowDetailsVisibilityMode="VisibleWhenSelected"
                  ItemsSource="{Binding VolunteerList}"
                  MouseDoubleClick="OnDoubleTappedVolunteerInList"
                  Background="Transparent"
                  >
            <!-- Row Styling-->
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <!-- Background Color Change-->
                    <Setter Property="Background">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ConvertIsActiveAndCallIdToBackgroundColorKey}">
                                <Binding Path="IsActive"/>
                                <Binding Path="CallId"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <!--Is Active indicator-->
                <DataGridTemplateColumn Header="Is Active" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsEnabled="False" IsChecked="{Binding Path=IsActive}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="50"/>
                <DataGridTextColumn Header="Full Name" Binding="{Binding FullName}" Width="150"/>
                <DataGridTextColumn Header="Calls Done" Binding="{Binding TotalCallsDoneByVolunteer}" Width="100"/>
                <DataGridTextColumn Header="Calls Cancelled" Binding="{Binding TotalCallsCancelByVolunteer}" Width="120"/>
                <DataGridTextColumn Header="Calls Expired" Binding="{Binding TotalCallsExpiredByVolunteer}" Width="120"/>
                <DataGridTextColumn Header="Current Call Id" Binding="{Binding CallId}" Width="100"/>
                <DataGridTextColumn Header="Call Type" Binding="{Binding TypeOfCall}" Width="100"/>

                <!--Delete volunteer btn-->
                <DataGridTemplateColumn Header="Delete" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete" Click="OnDeleteVolunteerInList" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        <!-- The bottom part-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>

            <!-- Sort Action-->
            <StackPanel Grid.Column="5">
                <Label HorizontalAlignment="Left" Content="Select a Type of Call"
                       FontSize="14" Foreground="#F9D4FF" VerticalAlignment="Stretch"/>
                <ComboBox
                    Height="34"
                      ItemsSource="{Binding Source={StaticResource CallTypesCollectionKey}}"
                      SelectedValue="{Binding Path=FilterByCallTypes}"
                      SelectionChanged="OnFilterCallTypeChange"/>
            </StackPanel>
            <!-- Add Button-->
            <Border Style="{StaticResource RoundedAddButton }"
                    Grid.Column="3">
                <Button Content="+" Background="Transparent" BorderThickness="0" FontSize="18" Click="OnAddVolunteer"/>
            </Border>
            
            <!--Filter Action-->
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <!--Filter Pararmeter-->
                <StackPanel Grid.Column="0">
                    <Label HorizontalAlignment="Left" Content="Filter By"
                       FontSize="14" Foreground="#F9D4FF" VerticalAlignment="Stretch"/>
                    <ComboBox 
                        Height="34"
                      ItemsSource="{Binding Source={}}"
                      SelectedValue="{Binding SelectedVolunteer}"
                      SelectionChanged=""/>
                </StackPanel>
                
                <!--Filter's value parameter-->
                <StackPanel Grid.Column="2">
                    <Label HorizontalAlignment="Left" Content="Value"
                       FontSize="14" Foreground="#F9D4FF" VerticalAlignment="Stretch"/>
                    <TextBox Height="34"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
